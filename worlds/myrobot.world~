<sdf version='1.4'>
  <world name='default'>
    <model name='ground_plane'>
      <static>1</static>
      <link name='link'>
        <collision name='collision'>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>100 100</size>
            </plane>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>100</mu>
                <mu2>50</mu2>
              </ode>
            </friction>
            <bounce/>
            <contact>
              <ode/>
            </contact>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='visual'>
          <cast_shadows>0</cast_shadows>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>100 100</size>
            </plane>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Grey</name>
            </script>
          </material>
        </visual>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
        <gravity>1</gravity>
      </link>
    </model>
    <light name='sun' type='directional'>
      <cast_shadows>1</cast_shadows>
      <pose>0 0 10 0 -0 0</pose>
      <diffuse>0.8 0.8 0.8 1</diffuse>
      <specular>0.2 0.2 0.2 1</specular>
      <attenuation>
        <range>1000</range>
        <constant>0.9</constant>
        <linear>0.01</linear>
        <quadratic>0.001</quadratic>
      </attenuation>
      <direction>-0.5 0.1 -0.9</direction>
    </light>
    <physics type='ode'>
      <max_step_size>0.001</max_step_size>
      <real_time_factor>1</real_time_factor>
      <real_time_update_rate>1000</real_time_update_rate>
      <gravity>0 0 -9.8</gravity>
    </physics>
    <scene>
      <ambient>0.4 0.4 0.4 1</ambient>
      <background>0.7 0.7 0.7 1</background>
      <shadows>1</shadows>
    </scene>
    <model name='uav'>
      <link name='base_link'>
        <pose>0 0 0 0 -0 0</pose>
        <inertial>
          <pose>0.000162272 0 -8.11359e-06 0 -0 0</pose>
          <mass>1.479</mass>
          <inertia>
            <ixx>0.0116202</ixx>
            <ixy>0</ixy>
            <ixz>-1.92195e-06</ixz>
            <iyy>0.0118057</iyy>
            <iyz>0</iyz>
            <izz>0.0220856</izz>
          </inertia>
        </inertial>
        <collision name='base_link_collision'>
          <pose>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/hector_quadrotor_description/meshes/quadrotor/quadrotor_base.stl</uri>
            </mesh>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <bounce/>
            <friction>
              <ode/>
            </friction>
            <contact>
              <ode/>
            </contact>
          </surface>
        </collision>
        <collision name='base_link_collision_downward_cam_link'>
          <pose>0.4 0 0 3.14159 1.57079 3.14159</pose>
          <geometry>
            <box>
              <size>0.01 0.01 0.01</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <collision name='base_link_collision_sonar_link'>
          <pose>-0.16 0 -0.012 3.14159 1.57079 3.14159</pose>
          <geometry>
            <box>
              <size>0.01 0.01 0.01</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='base_link_visual'>
          <pose>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/hector_quadrotor_description/meshes/quadrotor/quadrotor_base.dae</uri>
            </mesh>
          </geometry>
        </visual>
        <visual name='base_link_visual_downward_cam_link'>
          <pose>0.4 0 0 3.14159 1.57079 3.14159</pose>
          <geometry>
            <box>
              <size>0.01 0.01 0.01</size>
            </box>
          </geometry>
        </visual>
        <visual name='base_link_visual_sonar_link'>
          <pose>-0.16 0 -0.012 3.14159 1.57079 3.14159</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/hector_sensors_description/meshes/sonar_sensor/max_sonar_ez4.dae</uri>
            </mesh>
          </geometry>
        </visual>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <sensor name='downward_cam_camera_sensor' type='camera'>
          <update_rate>20</update_rate>
          <camera name='__default__'>
            <horizontal_fov>1.74533</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.01</near>
              <far>100</far>
            </clip>
          </camera>
          <plugin name='downward_cam_camera_controller' filename='libgazebo_ros_camera.so'>
            <cameraName>downward_cam</cameraName>
            <alwaysOn>true</alwaysOn>
            <updateRate>20</updateRate>
            <imageTopicName>camera/image</imageTopicName>
            <cameraInfoTopicName>camera/camera_info</cameraInfoTopicName>
            <frameName>downward_cam_optical_frame</frameName>
            <robotNamespace>/uav/</robotNamespace>
          </plugin>
          <pose>0.4 0 0 3.14159 1.57079 3.14159</pose>
        </sensor>
        <gravity>1</gravity>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <sensor name='sonar' type='ray'>
          <always_on>1</always_on>
          <update_rate>10</update_rate>
          <visualize>0</visualize>
          <ray>
            <scan>
              <horizontal>
                <samples>3</samples>
                <resolution>1</resolution>
                <min_angle>-0.349066</min_angle>
                <max_angle>0.349066</max_angle>
              </horizontal>
              <vertical>
                <samples>3</samples>
                <resolution>1</resolution>
                <min_angle>-0.349066</min_angle>
                <max_angle>0.349066</max_angle>
              </vertical>
            </scan>
            <range>
              <min>0.03</min>
              <max>3</max>
              <resolution>0.01</resolution>
            </range>
          </ray>
          <plugin name='gazebo_ros_sonar_controller' filename='libhector_gazebo_ros_sonar.so'>
            <gaussianNoise>0.005</gaussianNoise>
            <topicName>sonar_height</topicName>
            <frameId>sonar_link</frameId>
            <robotNamespace>/uav/</robotNamespace>
          </plugin>
          <pose>-0.16 0 -0.012 3.14159 1.57079 3.14159</pose>
        </sensor>
        <kinematic>0</kinematic>
      </link>
      <plugin name='quadrotor_imu_sim' filename='libhector_gazebo_ros_imu.so'>
        <updateRate>100.0</updateRate>
        <bodyName>base_link</bodyName>
        <topicName>raw_imu</topicName>
        <rpyOffsets>0 0 0</rpyOffsets>
        <gaussianNoise>0</gaussianNoise>
        <accelDrift>0.5 0.5 0.5</accelDrift>
        <accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
        <rateDrift>0.1 0.1 0.1</rateDrift>
        <rateGaussianNoise>0.05 0.05 0.015</rateGaussianNoise>
        <robotNamespace>/uav/</robotNamespace>
      </plugin>
      <plugin name='quadrotor_baro_sim' filename='libhector_gazebo_ros_baro.so'>
        <updateRate>10.0</updateRate>
        <bodyName>base_link</bodyName>
        <topicName>pressure_height</topicName>
        <altimeterTopicName>altimeter</altimeterTopicName>
        <offset>0</offset>
        <drift>10.0</drift>
        <gaussianNoise>0.1</gaussianNoise>
        <robotNamespace>/uav/</robotNamespace>
      </plugin>
      <plugin name='quadrotor_magnetic_sim' filename='libhector_gazebo_ros_magnetic.so'>
        <updateRate>10.0</updateRate>
        <bodyName>base_link</bodyName>
        <topicName>magnetic</topicName>
        <offset>0 0 0</offset>
        <drift>0.0 0.0 0.0</drift>
        <gaussianNoise>1.3e-2 1.3e-2 1.3e-2</gaussianNoise>
        <robotNamespace>/uav/</robotNamespace>
      </plugin>
      <plugin name='quadrotor_gps_sim' filename='libhector_gazebo_ros_gps.so'>
        <updateRate>4.0</updateRate>
        <bodyName>base_link</bodyName>
        <topicName>fix</topicName>
        <velocityTopicName>fix_velocity</velocityTopicName>
        <referenceLatitude>49.860246</referenceLatitude>
        <referenceLongitude>8.687077</referenceLongitude>
        <drift>5.0 5.0 5.0</drift>
        <gaussianNoise>0.01 0.01 0.01</gaussianNoise>
        <velocityDrift>0 0 0</velocityDrift>
        <velocityGaussianNoise>0.05 0.05 0.05</velocityGaussianNoise>
        <robotNamespace>/uav/</robotNamespace>
      </plugin>
      <plugin name='quadrotor_groundtruth_sim' filename='libgazebo_ros_p3d.so'>
        <updateRate>100.0</updateRate>
        <bodyName>base_link</bodyName>
        <topicName>ground_truth/state</topicName>
        <gaussianNoise>0.0</gaussianNoise>
        <frameName>world</frameName>
        <robotNamespace>/uav/</robotNamespace>
      </plugin>
      <plugin name='quadrotor_controller' filename='libgazebo_ros_control.so'>
        <controlPeriod>0.01</controlPeriod>
        <robotSimType>hector_quadrotor_controller_gazebo/QuadrotorHardwareSim</robotSimType>
        <robotNamespace>/uav/</robotNamespace>
      </plugin>
      <plugin name='quadrotor_propulsion' filename='libhector_gazebo_quadrotor_propulsion.so'>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <bodyName>base_link</bodyName>
        <controlRate>100.0</controlRate>
        <controlDelay>0.01</controlDelay>
        <motorStatusRate>100.0</motorStatusRate>
        <robotNamespace>/uav/</robotNamespace>
      </plugin>
      <static>0</static>
      <plugin name='quadrotor_aerodynamics' filename='libhector_gazebo_quadrotor_aerodynamics.so'>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <bodyName>base_link</bodyName>
        <robotNamespace>/uav/</robotNamespace>
      </plugin>
      <pose>0.65 1 0.01 0 -0 0</pose>
    </model>
    <model name='p3dx'>
      <link name='base_link'>
        <pose>0 0 0 0 -0 0</pose>
        <inertial>
          <pose>-0.0315987 0 0.0447215 0 -0 0</pose>
          <mass>12.5001</mass>
          <inertia>
            <ixx>1.16257</ixx>
            <ixy>0</ixy>
            <ixz>0.0383629</ixz>
            <iyy>1.25617</iyy>
            <iyz>0</iyz>
            <izz>1.21906</izz>
          </inertia>
        </inertial>
        <collision name='base_link_collision_chassis'>
          <pose>-0.045 0 0.148 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/chassis.stl</uri>
            </mesh>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <collision name='base_link_collision_front_camera'>
          <pose>0.15 0 0.27 0 1.57 0</pose>
          <geometry>
            <cylinder>
              <length>0.1</length>
              <radius>0.03</radius>
            </cylinder>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <collision name='base_link_collision_sonar'>
          <pose>0.109 0 0.209 0 -0 0</pose>
          <geometry>
            <box>
              <size>0 0 0</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <collision name='base_link_collision_top'>
          <pose>-0.045 0 0.234 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/top.stl</uri>
            </mesh>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='base_link_visual_battery0'>
          <pose>-0.14 0 0.13 0 -0 0</pose>
          <geometry>
            <box>
              <size>0.151 0.065 0.094</size>
            </box>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <visual name='base_link_visual_chassis'>
          <pose>-0.045 0 0.148 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/chassis.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <visual name='base_link_visual_front_camera'>
          <pose>0.15 0 0.27 0 1.57 0</pose>
          <geometry>
            <cylinder>
              <length>0.1</length>
              <radius>0.03</radius>
            </cylinder>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Red</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <visual name='base_link_visual_sonar'>
          <pose>0.109 0 0.209 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/back_sonar.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Yellow</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <visual name='base_link_visual_top'>
          <pose>-0.045 0 0.234 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/top.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Red</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <sensor name='camera1' type='camera'>
          <update_rate>30</update_rate>
          <camera name='head'>
            <horizontal_fov>1.39626</horizontal_fov>
            <image>
              <width>800</width>
              <height>800</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <mean>0</mean>
              <stddev>0.007</stddev>
            </noise>
          </camera>
          <plugin name='camera_controller' filename='libgazebo_ros_camera.so'>
            <robotNamespace/>
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>front_camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>front_camera</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
          </plugin>
          <pose>0.15 0 0.27 0 -0 0</pose>
        </sensor>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <gravity>1</gravity>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
      </link>
      <link name='swivel'>
        <pose>-0.185 0 0.055 0 -0 0</pose>
        <inertial>
          <pose>0 0 0 0 -0 0</pose>
          <mass>0.1</mass>
          <inertia>
            <ixx>0.01</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.01</iyy>
            <iyz>0</iyz>
            <izz>0.01</izz>
          </inertia>
        </inertial>
        <collision name='swivel_collision'>
          <pose>0 0 0 0 -0 0</pose>
          <geometry>
            <box>
              <size>0 0 0</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='swivel_visual'>
          <pose>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/swivel.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Grey</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <gravity>1</gravity>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
      </link>
      <joint name='chassis_swivel_joint' type='revolute'>
        <child>swivel</child>
        <parent>base_link</parent>
        <axis>
          <xyz>0 0 1</xyz>
          <limit>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <dynamics/>
        </axis>
      </joint>
      <link name='center_wheel'>
        <pose>-0.211 0 0.039 0 -0 0</pose>
        <inertial>
          <pose>-0.000318182 0 -9.09091e-05 0 -0 0</pose>
          <mass>0.11</mass>
          <inertia>
            <ixx>0.0248235</ixx>
            <ixy>-0.00142347</ixy>
            <ixz>0.00100543</ixz>
            <iyy>0.0304364</iyy>
            <iyz>-8.54693e-06</iyz>
            <izz>0.0235281</izz>
          </inertia>
        </inertial>
        <collision name='center_wheel_collision'>
          <pose>0 0 0 -1.5708 0 0</pose>
          <geometry>
            <cylinder>
              <length>0.01</length>
              <radius>0.0375</radius>
            </cylinder>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <collision name='center_wheel_collision_center_hubcap'>
          <pose>-0.0035 0 -0.001 0 -0 0</pose>
          <geometry>
            <box>
              <size>0 0 0</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='center_wheel_visual'>
          <pose>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/center_wheel.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <visual name='center_wheel_visual_center_hubcap'>
          <pose>-0.0035 0 -0.001 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/center_hubcap.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Grey</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <gravity>1</gravity>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
      </link>
      <joint name='swivel_wheel_joint' type='revolute'>
        <child>center_wheel</child>
        <parent>swivel</parent>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <dynamics/>
        </axis>
      </joint>
      <link name='left_hub'>
        <pose>0 -0.15 0.09 0 -0 0</pose>
        <inertial>
          <pose>0 0 0 0 -0 0</pose>
          <mass>0.51</mass>
          <inertia>
            <ixx>0.0248235</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.0304363</iyy>
            <iyz>0</iyz>
            <izz>0.023528</izz>
          </inertia>
        </inertial>
        <collision name='left_hub_collision'>
          <pose>0 0 0 0 -0 0</pose>
          <geometry>
            <box>
              <size>0 0 0</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <collision name='left_hub_collision_left_wheel'>
          <pose>0 0 0 -1.5708 0 0</pose>
          <geometry>
            <cylinder>
              <length>0.01</length>
              <radius>0.09</radius>
            </cylinder>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='left_hub_visual'>
          <pose>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/left_hubcap.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Yellow</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <visual name='left_hub_visual_left_wheel'>
          <pose>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/left_wheel.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <gravity>1</gravity>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
      </link>
      <joint name='left_hub_joint' type='revolute'>
        <child>left_hub</child>
        <parent>base_link</parent>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <dynamics/>
        </axis>
      </joint>
      <link name='right_hub'>
        <pose>0 0.15 0.09 0 -0 0</pose>
        <inertial>
          <pose>0 0 0 0 -0 0</pose>
          <mass>0.51</mass>
          <inertia>
            <ixx>0.0248235</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.0304363</iyy>
            <iyz>0</iyz>
            <izz>0.023528</izz>
          </inertia>
        </inertial>
        <collision name='right_hub_collision'>
          <pose>0 0 0 0 -0 0</pose>
          <geometry>
            <box>
              <size>0 0 0</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <collision name='right_hub_collision_right_wheel'>
          <pose>0 0 0 -1.5708 0 0</pose>
          <geometry>
            <cylinder>
              <length>0.01</length>
              <radius>0.09</radius>
            </cylinder>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
            <bounce/>
          </surface>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='right_hub_visual'>
          <pose>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/right_hubcap.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Yellow</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <visual name='right_hub_visual_right_wheel'>
          <pose>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>/opt/ros/hydro/share/gazebo_plugins/test/multi_robot_scenario/meshes/p3dx/right_wheel.stl</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>__default__</uri>
            </script>
          </material>
        </visual>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <gravity>1</gravity>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
      </link>
      <joint name='right_hub_joint' type='revolute'>
        <child>right_hub</child>
        <parent>base_link</parent>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <dynamics/>
        </axis>
      </joint>
      <plugin name='differential_drive_controller' filename='libgazebo_ros_diff_drive.so'>
        <rosDebugLevel>Debug</rosDebugLevel>
        <robotNamespace/>
        <publishWheelTF>false</publishWheelTF>
        <publishWheelJointState>true</publishWheelJointState>
        <alwaysOn>true</alwaysOn>
        <leftJoint>left_hub_joint</leftJoint>
        <rightJoint>right_hub_joint</rightJoint>
        <wheelSeparation>0.3</wheelSeparation>
        <wheelDiameter>0.18</wheelDiameter>
        <wheelTorque>20</wheelTorque>
        <wheelAcceleration>1.8</wheelAcceleration>
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <odometrySource>world</odometrySource>
        <robotBaseFrame>base_link</robotBaseFrame>
        <updateRate>10.0</updateRate>
      </plugin>
      <static>0</static>
      <plugin name='joint_state_publisher' filename='libgazebo_ros_joint_state_publisher.so'>
        <robotNamespace/>
        <jointName>chassis_swivel_joint, swivel_wheel_joint, left_hub_joint, right_hub_joint</jointName>
        <updateRate>10.0</updateRate>
        <alwaysOn>true</alwaysOn>
      </plugin>
      <pose>0 0 0.01 0 -0 0</pose>
    </model>
    <state world_name='default'>
      <sim_time>576 796000000</sim_time>
      <real_time>18 664550423</real_time>
      <wall_time>1433515228 692422054</wall_time>
      <model name='ground_plane'>
        <pose>0 0 0 0 -0 0</pose>
        <link name='link'>
          <pose>0 0 0 0 -0 0</pose>
          <velocity>0 0 0 0 -0 0</velocity>
          <acceleration>0 0 0 0 -0 0</acceleration>
          <wrench>0 0 0 0 -0 0</wrench>
        </link>
      </model>
      <model name='p3dx'>
        <pose>-0.190391 -0.00974 0.003966 1.7e-05 -0.298092 0.200472</pose>
        <link name='base_link'>
          <pose>-0.190391 -0.00974 0.003966 1.7e-05 -0.298092 0.200472</pose>
          <velocity>-3.1e-05 0.000219 7e-05 0.007622 0.000717 -0.00059</velocity>
          <acceleration>0 0 0 0 -0 0</acceleration>
          <wrench>0 0 0 0 -0 0</wrench>
        </link>
        <link name='center_wheel'>
          <pose>-0.404999 -0.053781 0.037541 -0.008533 -0.09649 0.228999</pose>
          <velocity>5.9e-05 -0.000168 -1.4e-05 0.004749 0.000502 0.00858</velocity>
          <acceleration>0 0 0 0 -0 0</acceleration>
          <wrench>0 0 0 0 -0 0</wrench>
        </link>
        <link name='left_hub'>
          <pose>-0.186424 -0.162 0.089998 1.7e-05 -0.295303 0.200472</pose>
          <velocity>-7e-05 -0.00053 -0.002065 0.007615 0.000715 -0.000596</velocity>
          <acceleration>0 0 0 0 -0 0</acceleration>
          <wrench>0 0 0 0 -0 0</wrench>
        </link>
        <link name='right_hub'>
          <pose>-0.246165 0.13199 0.09 1.5e-05 -0.294692 0.200473</pose>
          <velocity>7.8e-05 -0.000635 0.001336 0.007141 0.000822 -0.000593</velocity>
          <acceleration>0 0 0 0 -0 0</acceleration>
          <wrench>0 0 0 0 -0 0</wrench>
        </link>
        <link name='swivel'>
          <pose>-0.37952 -0.048172 0.002206 -0.008885 -0.297962 0.230786</pose>
          <velocity>-4.5e-05 0.000319 -0.000119 0.004833 5.4e-05 0.008601</velocity>
          <acceleration>0 0 0 0 -0 0</acceleration>
          <wrench>0 0 0 0 -0 0</wrench>
        </link>
      </model>
      <model name='uav'>
        <pose>-1.21496 -0.001185 0.182466 0 1e-06 0.065427</pose>
        <link name='base_link'>
          <pose>-1.21496 -0.001185 0.182466 0 1e-06 0.065427</pose>
          <velocity>-0.002265 0.001884 0.002425 -0.010325 -0.012417 -1.4e-05</velocity>
          <acceleration>0 0 0 0 -0 0</acceleration>
          <wrench>0 0 0 0 -0 0</wrench>
        </link>
      </model>
    </state>
    <gui fullscreen='0'>
      <camera name='user_camera'>
        <pose>5.22128 5.78785 10.1627 0.279592 0.987074 -2.35415</pose>
        <view_controller>orbit</view_controller>
      </camera>
    </gui>
  </world>
</sdf>
